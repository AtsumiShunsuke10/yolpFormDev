<!-- Page: -->
<apex:page controller="SearchAddressByPostCodeController">
    <apex:includeLightning /> 
    <apex:slds />
    <apex:form>
        <div class="row infoDiv">
            <apex:outputLabel value="郵便番号" for="storePostCode" />
            <div class="w-100 slds-scope row">
                <div class="w-30 my-box postcode-padding"><input styleClass="form-control" id="zip"/></div>
                <div>
                    <button type="button" id="srchAppAddrBtn" class="offset-1 btn btn-danger text-white" style="min-width: 50px;font-size: 1rem" onclick="zipsearch()">
                        <apex:outputText value="住所を検索" />
                    </button>
                </div>
            </div>
        </div>
        <div class="row infoDiv">
            <apex:outputLabel value="所在地又は住所（番地以降は入力してください。）" for="applicantAddress" />
            <div>
                <input styleClass="form-control" id="applicantAddress" />
            </div>
        </div>
    </apex:form>

    <script src="http://code.jquery.com/jquery-latest.js"></script>
    <script>
        /*
        * Copyright (c) 2012, Yahoo Japan Corporation.  All rights reserved.
        * Copyrights licensed under the MIT License.
        * See the accompanying LICENSE file for terms. */
        // 郵便番号検索
        function zipsearch() {
            // 郵便番号検索
            var url = 'https://map.yahooapis.jp/search/zip/V1/zipCodeSearch?';
            var zip_code = $('#zip').val().slice(0, 3) + '-' + $('#zip').val().slice(-4);
            console.log(zip_code);
            var param = {
                appid: '{!$Label.yolp_app_id_1}',
                //appid: 'dj00aiZpPXMzUUVKZGRlbnY3SSZzPWNvbnN1bWVyc2VjcmV0Jng9YjY-',
                output: 'json',
                query: zip_code,
                results: 100 // 郵便番号検索結果の件数を指定
            };
            $.ajax({
                url: url,
                data: param,
                dataType: 'jsonp',
                success: function (results) {
                    dispresultAddress(results);
                    console.log(results);
                },
                error: function () {
                    // エラー時の処理
                }
            });
        }


        //住所検索が重複ヒットした場合同じ値のみ追加する
        function dispresultAddress(ydf) {
            $('#applicantAddress').val(''); 
            let floors = ['０', '１', '２', '３', '４', '５', '６', '７', '８', '９'];
            var isMatched = true;
            if (ydf.ResultInfo.Count == 1 && ydf.Feature[0].Property.Address.startsWith('東京都')) {
                var rAdrs = ydf.Feature[0].Property.Address;
                //～丁目を弾く
                if (rAdrs.includes("（") && rAdrs.includes("丁目") && !(rAdrs.includes("～")) && !(rAdrs.includes("、"))) {
                    rAdrs = rAdrs.replace("（", "");
                    rAdrs = rAdrs.replace("）", "");
                }
                else if (rAdrs.includes("（") && rAdrs.includes("階")) {
                    if (rAdrs.includes("不明")) {
                        var deleteChar = rAdrs.indexOf('（');
                        rAdrs = rAdrs.substring(0, deleteChar);
                        console.log(deleteChar);
                    }
                    for (i = 0; i < floors.length; i++) {
                        if (rAdrs.includes(floors[i] + '階')) {
                            isMatched = false;
                            break;
                        }
                        if (isMatched) {
                            rAdrs = rAdrs.replace("（", "");
                            rAdrs = rAdrs.replace("）", "");
                        }
                    }
                }
                else if (rAdrs.includes('（')) {
                    var deleteChar = rAdrs.indexOf('（');
                    rAdrs = rAdrs.substring(0, deleteChar);
                    console.log(deleteChar);
                }
                $('#applicantAddress').val(rAdrs);
            } else if (ydf.ResultInfo.Count > 1 && ydf.Feature[0].Property.Address.startsWith('東京都')) {
                var rAdrs = '';
                var isMatched = true;
                for (i = 0; ydf.Feature[0].Property.Address.length; i++) {
                    var iAdrs = ydf.Feature[0].Property.Address.slice(0, i + 1);
                    for (x = 1; x < ydf.ResultInfo.Count; x++) {
                        var xAdrs = ydf.Feature[x].Property.Address
                        var isMatched = true;
                        if (xAdrs.indexOf(iAdrs)) {
                            isMatched = false;
                            break;
                        }
                    }
                    if (isMatched) {
                        rAdrs = iAdrs;
                    } else {
                        break;
                    }
                }
                
                if (rAdrs.includes("（") && rAdrs.includes("丁目") && !(rAdrs.includes("～")) && !(rAdrs.includes("、"))) {
                    rAdrs = rAdrs.replace("（", "");
                    rAdrs = rAdrs.replace("）", "");
                }
                else if (rAdrs.includes("（") && rAdrs.includes("階")) {
                    for (var i = 0; i < floors.length; i++) {
                        if (rAdrs.includes(floors[i] + '階')) {
                            rAdrs = rAdrs.replace("（", "");
                            rAdrs = rAdrs.replace("）", "");
                        }
                    }
                    // for (var i = 0; i < floors.length; i++) {
                    //     if (!(rAdrs.includes(floors[i]))) {
                    //         var deleteChar = rAdrs.indexOf('（');
                    //         rAdrs = rAdrs.substring(0, deleteChar);
                    //     }
                    // }
                }
                else if (rAdrs.includes('（')) {
                    var deleteChar = rAdrs.indexOf('（');
                    rAdrs = rAdrs.substring(0, deleteChar);
                }
                $('#applicantAddress').val(rAdrs);
            } else {
                alert('{!$Label.not_found_post_code}');
            }
        }
    </script>
</apex:page>